{"version":3,"sources":["Components/Button1.js","Components/Footer.js","Components/Button2.js","Components/Card.js","Components/Modal.js","Views/Dashboard.js","datastore/index.js","App.js","serviceWorker.js","index.js"],"names":["Button1","props","state","name","className","onClick","this","Component","Footer","checkout","toggle","data","totalQty","total","Button2","Card","increement","e","qty","setState","price","alert","descreement","decreement","addToCart","cardData","alt","src","url","offerText","brandName","productName","mrp","Modal","handleModal","id","style","display","React","Dashboard","cartIncreement","footerData","totalPrice","setTotalData","cartDecreement","Promise","resolve","reject","a","then","catch","console","log","Fragment","map","i","k","key","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.905b877e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Button1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"CHECKOUT\"\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"btn\">\r\n        <button className=\"btn-rectangle\" onClick={this.props.onClick}> {this.props.name}</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button1;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport Button1 from \"./Button1\";\r\n\r\nclass Footer extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      toggle: true,\r\n    }\r\n  }\r\n\r\n  checkout=()=>{\r\n    this.props.checkout()\r\n  }\r\n  render() {\r\n    const {data}=this.props;\r\n    return (\r\n      <div className=\"footer-container\">\r\n        <div className=\"footer-left\">\r\n          <div className=\"qty\">\r\n            <span>QTY {data.totalQty} </span>\r\n          </div>\r\n          <div className=\"total\">\r\n            <span>TOTAL {data.total} </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-right\">\r\n          <Button1 \r\n          name=\"CHECKOUT\"\r\n            onClick={()=>this.checkout()}\r\n          />\r\n        </div>\r\n        \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Button2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"CHECKOUT\"\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"btn\">\r\n        <button className=\"btn-circle\" onClick={this.props.onClick}> {this.props.name}</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button2;\r\n","import React, { Component } from \"react\";\r\nimport Button1 from \"./Button1\";\r\nimport Button2 from \"./Button2\";\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.cardData,\r\n      qty: 0,\r\n    };\r\n  }\r\n\r\n  increement=(e)=>{\r\n    const {data,qty}=this.state;\r\n    if (qty < data.totalQty){\r\n      this.setState({\r\n        qty: qty + 1\r\n      });\r\n      this.props.increement(data.price, 1)\r\n    }else{\r\n      alert(\"Not allow more then Actual qty.\")\r\n    }\r\n \r\n  }\r\n\r\n  descreement=(e)=>{\r\n    const { data, qty } = this.state;\r\n    if (qty > 0){\r\n      this.setState({\r\n        qty: qty - 1\r\n      });\r\n      this.props.decreement(data.price, 1)\r\n      \r\n    }\r\n  \r\n  }\r\n\r\n  addToCart=(e)=>{\r\n    this.props.addToCart()\r\n  }\r\n\r\n\r\n  render() {\r\n    const { data, qty}= this.state;\r\n    return (\r\n      <div className=\"main-card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"left-card-body\">\r\n              <div className=\"product-image\">\r\n              <img className=\"product-img\" alt=\"No Image Found\" src={data.url} />\r\n              </div>\r\n            <div className=\"product-off-text\">{data.offerText}</div>\r\n            </div>\r\n            <div className=\"right-card-body\">\r\n            <div className=\"product product-brand\">{data.brandName}</div>\r\n            <div className=\"product product-name\">{data.productName}</div>\r\n            <div className=\"product product-qty\">{data.totalQty}</div>\r\n            <div className=\"product product-mrp\">MRP {data.mrp}</div>\r\n            <div className=\"product product-rs\">RS {data.price}</div>\r\n              <div className=\"product-btns\">\r\n                <div className=\"btn-add-cart\">\r\n                  <Button1 name=\"ADD CART\" onClick={()=>this.addToCart()}/>\r\n                </div>\r\n                <div className=\"btn-inc-desc\">\r\n                  <span>\r\n                    <Button2 name=\"+\" onClick={()=>this.increement()}/>\r\n                  </span>\r\n                <span className=\"inc-desc-value\">{qty}</span>\r\n                  <span>\r\n                  <Button2 name=\"-\" onClick={()=>this.descreement()} />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nexport default class Modal extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    handleModal=()=>{\r\n        this.props.handleModal()\r\n    }\r\n    render(){\r\n        const {data}=this.props;\r\n       return(\r\n           <div id=\"myModal\" className=\"modal\" style={{ display: this.props.toggle ? 'block' : 'none' }}>\r\n               <div className=\"modal-content\">\r\n                   <span className=\"close\" onClick={this.handleModal}>&times;</span>\r\n                   <p className=\"popup popup-qty\">QTY : {data.totalQty}</p>\r\n                   <p className=\"popup popup-total\">TOTAL : {data.total}</p>\r\n                   <p className=\"popup popup-success\">Transaction successful</p>\r\n               </div>\r\n           </div>\r\n       )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport Footer from \"../Components/Footer\";\r\nimport Card from \"../Components/Card\";\r\nimport Modal from \"../Components/Modal\";\r\nimport { getJsonData } from \"../datastore/index\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      footerData:{\r\n        totalQty: 0,\r\n        total: 0,\r\n        toggle: false,\r\n      },\r\n      cardData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    getJsonData()\r\n      .then((cardData)=>{\r\n      this.setState({ cardData})\r\n    }).catch((e)=>console.log(e))\r\n  }\r\n\r\n  cartIncreement=(price, qty)=>{\r\n    const { footerData } = this.state\r\n    let totalQty = footerData.totalQty + qty;\r\n    let totalPrice = footerData.total + (price * qty);\r\n    this.setTotalData(totalPrice, totalQty);\r\n  }\r\n\r\n  cartDecreement = (price, qty)=>{\r\n    const { footerData } = this.state\r\n    let totalQty = footerData.totalQty - qty;\r\n    let totalPrice = footerData.total - (price * qty);\r\n    this.setTotalData(totalPrice, totalQty);\r\n  }\r\n\r\n  addToCart = () => {\r\n    const { footerData } = this.state\r\n    this.setTotalData(footerData.total, footerData.totalQty);\r\n  }\r\n\r\n  setTotalData = (total, totalQty)=>{\r\n    this.setState({\r\n      footerData: {\r\n        ...this.state.footerData,\r\n        total,\r\n        totalQty\r\n      }\r\n    })\r\n  }\r\n\r\n  handleModal=()=>{\r\n    this.setState({\r\n      toggle: !this.state.toggle\r\n    })\r\n  }\r\n  render() {\r\n    const { cardData, footerData, toggle} = this.state;\r\n    return (\r\n      <React.Fragment>    \r\n        <div className=\"main-container\">\r\n         <Modal \r\n            toggle={toggle}\r\n            handleModal={() => this.handleModal()}\r\n            data={footerData}\r\n         />\r\n          \r\n          <div className=\"card-container\">\r\n            {cardData.map((i,k)=>\r\n              <Card key={k} \r\n                cardData={i} \r\n                increement={(price, qty) => this.cartIncreement(price, qty)}\r\n                decreement={(price, qty) => this.cartDecreement(price, qty)}\r\n                addToCart={() => this.addToCart()}\r\n              />          \r\n          )}\r\n          </div>\r\n          <div className=\"footer\">\r\n            <Footer\r\n             data={footerData}\r\n             checkout={()=>this.handleModal()}\r\n             />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","\r\nimport data from \"./jsonData.json\"\r\nexport const getJsonData=()=>{\r\n    return new Promise(async(resolve, reject)=>{\r\n        resolve(data)\r\n    })\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./Views/Dashboard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={() => <Dashboard />} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}